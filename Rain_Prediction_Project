{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.6.6","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":1733506,"sourceType":"datasetVersion","datasetId":6012}],"dockerImageVersionId":12783,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":true},"colab":{"provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/notebooke773d5aa0c-a346050a-3d14-47e9-ab46-67ea5012a8f2.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20240811/auto/storage/goog4_request&X-Goog-Date=20240811T081907Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=6000754519aeb363776ee82bf131309d881140ab0b84fd53ec35783f73570fb17869677c86a6b5a6b9d70a01f15b6c90aadd092f912f9f765d552732e04e6426bee4c5e0459063fe0be6e3fca1a10581ef240b3fa64126c519df23ea4dfc4a5a84cf1cf54b361f33df5a4ac421f8d6bdf641df73ea8774be9a18ffc84d41bc419414acce20176edf288308583152778c9197d6e12fc54c44b784acc248b92d103387506a3d284270901ea02b3a89e147907e66bd4db2084dc0e8e9c5141a4cff47930badcbd09af4fb9c7fd1ca0d77186aed0a4dac0b86767ee0a7a155ebbe23ee85eb960abe93dc0dd83d6f6e6158096bb7bf2a88c85d880a09553b4d0185c9","timestamp":1723364754420}]}},"nbformat_minor":0,"nbformat":4,"cells":[{"source":["\n","# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES\n","# TO THE CORRECT LOCATION (/kaggle/input) IN YOUR NOTEBOOK,\n","# THEN FEEL FREE TO DELETE THIS CELL.\n","# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON\n","# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR\n","# NOTEBOOK.\n","\n","import os\n","import sys\n","from tempfile import NamedTemporaryFile\n","from urllib.request import urlopen\n","from urllib.parse import unquote, urlparse\n","from urllib.error import HTTPError\n","from zipfile import ZipFile\n","import tarfile\n","import shutil\n","\n","CHUNK_SIZE = 40960\n","DATA_SOURCE_MAPPING = ':https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F6012%2F1733506%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240811%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240811T081907Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D7727a4e6417024d36d1a966d3064465d7237e4f63c0629f0588d93846ff8f514d7a1e03572ebd470a8d1ac4ee1d6f286919a02e486bf30e72a9a8f3a8e275bb5b40602ff5a05872b7a29651e934cb6d73c05e8b1e6005b191f9c19ca25f70dcfe785f3b26738579002188074ab3342946f509731cd9a32caaaa89bd5e6900b81acdd08b96587b8177bd03e173835e223b9b16de9ee5278a113679cef29c59687e476c4d62eee129531a4b0358cad1175a7a393e3c6787d18dc98057b1d30f2fa07a45738814652e01a7de1323720806af576b983eccf8f0f67065a2ee9960e2b3beff186026250a7ce9e5ece42a47845fe80f84626f18cd47c71955f77801201'\n","\n","KAGGLE_INPUT_PATH='/kaggle/input'\n","KAGGLE_WORKING_PATH='/kaggle/working'\n","KAGGLE_SYMLINK='kaggle'\n","\n","!umount /kaggle/input/ 2> /dev/null\n","shutil.rmtree('/kaggle/input', ignore_errors=True)\n","os.makedirs(KAGGLE_INPUT_PATH, 0o777, exist_ok=True)\n","os.makedirs(KAGGLE_WORKING_PATH, 0o777, exist_ok=True)\n","\n","try:\n","  os.symlink(KAGGLE_INPUT_PATH, os.path.join(\"..\", 'input'), target_is_directory=True)\n","except FileExistsError:\n","  pass\n","try:\n","  os.symlink(KAGGLE_WORKING_PATH, os.path.join(\"..\", 'working'), target_is_directory=True)\n","except FileExistsError:\n","  pass\n","\n","for data_source_mapping in DATA_SOURCE_MAPPING.split(','):\n","    directory, download_url_encoded = data_source_mapping.split(':')\n","    download_url = unquote(download_url_encoded)\n","    filename = urlparse(download_url).path\n","    destination_path = os.path.join(KAGGLE_INPUT_PATH, directory)\n","    try:\n","        with urlopen(download_url) as fileres, NamedTemporaryFile() as tfile:\n","            total_length = fileres.headers['content-length']\n","            print(f'Downloading {directory}, {total_length} bytes compressed')\n","            dl = 0\n","            data = fileres.read(CHUNK_SIZE)\n","            while len(data) > 0:\n","                dl += len(data)\n","                tfile.write(data)\n","                done = int(50 * dl / int(total_length))\n","                sys.stdout.write(f\"\\r[{'=' * done}{' ' * (50-done)}] {dl} bytes downloaded\")\n","                sys.stdout.flush()\n","                data = fileres.read(CHUNK_SIZE)\n","            if filename.endswith('.zip'):\n","              with ZipFile(tfile) as zfile:\n","                zfile.extractall(destination_path)\n","            else:\n","              with tarfile.open(tfile.name) as tarfile:\n","                tarfile.extractall(destination_path)\n","            print(f'\\nDownloaded and uncompressed: {directory}')\n","    except HTTPError as e:\n","        print(f'Failed to load (likely expired) {download_url} to path {destination_path}')\n","        continue\n","    except OSError as e:\n","        print(f'Failed to load {download_url} to path {destination_path}')\n","        continue\n","\n","print('Data source import complete.')\n"],"metadata":{"id":"uLVLDCTjhRbb","executionInfo":{"status":"ok","timestamp":1723364805976,"user_tz":-330,"elapsed":1150,"user":{"displayName":"Mudavath Vishnu ae21b044","userId":"03764446376605897718"}},"outputId":"0c4c80c9-c6d1-41a1-998a-dd9a1fbb5393","colab":{"base_uri":"https://localhost:8080/"}},"cell_type":"code","outputs":[{"output_type":"stream","name":"stdout","text":["Downloading , 4020790 bytes compressed\n","[==================================================] 4020790 bytes downloaded\n","Downloaded and uncompressed: \n","Data source import complete.\n"]}],"execution_count":1},{"cell_type":"markdown","source":["In this example, I will try to build a model which will predict if it will rain tomorrow!\n","Clearly, it is a classification problem. The model will gives us 2 classes - either YES or NO.\n","We shall try various classifiers to find the best model for the data.\n","\n","**Data Pre-processing**"],"metadata":{"_uuid":"c876bbbd70883cc2746aa3e836ec17a9361aaef7","id":"2btNNbPBhRbe"}},{"cell_type":"code","source":["#Load the csv file as data frame.\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","df = pd.read_csv('../input/weatherAUS.csv')\n","print('Size of weather data frame is :',df.shape)\n","#Let us see how our data looks like!\n","df[0:5]"],"metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","scrolled":true,"execution":{"iopub.status.busy":"2024-08-11T08:03:49.905392Z","iopub.execute_input":"2024-08-11T08:03:49.905742Z","iopub.status.idle":"2024-08-11T08:03:50.898493Z","shell.execute_reply.started":"2024-08-11T08:03:49.905678Z","shell.execute_reply":"2024-08-11T08:03:50.897275Z"},"trusted":true,"id":"5fILBREMhRbh","executionInfo":{"status":"ok","timestamp":1723364807806,"user_tz":-330,"elapsed":1832,"user":{"displayName":"Mudavath Vishnu ae21b044","userId":"03764446376605897718"}},"outputId":"51089a2b-1b2c-47b3-b6a4-85daba2fb18d","colab":{"base_uri":"https://localhost:8080/","height":359}},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Size of weather data frame is : (145460, 23)\n"]},{"output_type":"execute_result","data":{"text/plain":["         Date Location  MinTemp  MaxTemp  Rainfall  Evaporation  Sunshine  \\\n","0  2008-12-01   Albury     13.4     22.9       0.6          NaN       NaN   \n","1  2008-12-02   Albury      7.4     25.1       0.0          NaN       NaN   \n","2  2008-12-03   Albury     12.9     25.7       0.0          NaN       NaN   \n","3  2008-12-04   Albury      9.2     28.0       0.0          NaN       NaN   \n","4  2008-12-05   Albury     17.5     32.3       1.0          NaN       NaN   \n","\n","  WindGustDir  WindGustSpeed WindDir9am  ... Humidity9am  Humidity3pm  \\\n","0           W           44.0          W  ...        71.0         22.0   \n","1         WNW           44.0        NNW  ...        44.0         25.0   \n","2         WSW           46.0          W  ...        38.0         30.0   \n","3          NE           24.0         SE  ...        45.0         16.0   \n","4           W           41.0        ENE  ...        82.0         33.0   \n","\n","   Pressure9am  Pressure3pm  Cloud9am  Cloud3pm  Temp9am  Temp3pm  RainToday  \\\n","0       1007.7       1007.1       8.0       NaN     16.9     21.8         No   \n","1       1010.6       1007.8       NaN       NaN     17.2     24.3         No   \n","2       1007.6       1008.7       NaN       2.0     21.0     23.2         No   \n","3       1017.6       1012.8       NaN       NaN     18.1     26.5         No   \n","4       1010.8       1006.0       7.0       8.0     17.8     29.7         No   \n","\n","   RainTomorrow  \n","0            No  \n","1            No  \n","2            No  \n","3            No  \n","4            No  \n","\n","[5 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-d95d0b7e-462d-4f5c-bf19-9a10a78d3fe2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Location</th>\n","      <th>MinTemp</th>\n","      <th>MaxTemp</th>\n","      <th>Rainfall</th>\n","      <th>Evaporation</th>\n","      <th>Sunshine</th>\n","      <th>WindGustDir</th>\n","      <th>WindGustSpeed</th>\n","      <th>WindDir9am</th>\n","      <th>...</th>\n","      <th>Humidity9am</th>\n","      <th>Humidity3pm</th>\n","      <th>Pressure9am</th>\n","      <th>Pressure3pm</th>\n","      <th>Cloud9am</th>\n","      <th>Cloud3pm</th>\n","      <th>Temp9am</th>\n","      <th>Temp3pm</th>\n","      <th>RainToday</th>\n","      <th>RainTomorrow</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2008-12-01</td>\n","      <td>Albury</td>\n","      <td>13.4</td>\n","      <td>22.9</td>\n","      <td>0.6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>W</td>\n","      <td>44.0</td>\n","      <td>W</td>\n","      <td>...</td>\n","      <td>71.0</td>\n","      <td>22.0</td>\n","      <td>1007.7</td>\n","      <td>1007.1</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>16.9</td>\n","      <td>21.8</td>\n","      <td>No</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2008-12-02</td>\n","      <td>Albury</td>\n","      <td>7.4</td>\n","      <td>25.1</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WNW</td>\n","      <td>44.0</td>\n","      <td>NNW</td>\n","      <td>...</td>\n","      <td>44.0</td>\n","      <td>25.0</td>\n","      <td>1010.6</td>\n","      <td>1007.8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>17.2</td>\n","      <td>24.3</td>\n","      <td>No</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2008-12-03</td>\n","      <td>Albury</td>\n","      <td>12.9</td>\n","      <td>25.7</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WSW</td>\n","      <td>46.0</td>\n","      <td>W</td>\n","      <td>...</td>\n","      <td>38.0</td>\n","      <td>30.0</td>\n","      <td>1007.6</td>\n","      <td>1008.7</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>21.0</td>\n","      <td>23.2</td>\n","      <td>No</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2008-12-04</td>\n","      <td>Albury</td>\n","      <td>9.2</td>\n","      <td>28.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NE</td>\n","      <td>24.0</td>\n","      <td>SE</td>\n","      <td>...</td>\n","      <td>45.0</td>\n","      <td>16.0</td>\n","      <td>1017.6</td>\n","      <td>1012.8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>18.1</td>\n","      <td>26.5</td>\n","      <td>No</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2008-12-05</td>\n","      <td>Albury</td>\n","      <td>17.5</td>\n","      <td>32.3</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>W</td>\n","      <td>41.0</td>\n","      <td>ENE</td>\n","      <td>...</td>\n","      <td>82.0</td>\n","      <td>33.0</td>\n","      <td>1010.8</td>\n","      <td>1006.0</td>\n","      <td>7.0</td>\n","      <td>8.0</td>\n","      <td>17.8</td>\n","      <td>29.7</td>\n","      <td>No</td>\n","      <td>No</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d95d0b7e-462d-4f5c-bf19-9a10a78d3fe2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d95d0b7e-462d-4f5c-bf19-9a10a78d3fe2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d95d0b7e-462d-4f5c-bf19-9a10a78d3fe2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-298c6c0c-846c-4144-a85f-fddd886df8eb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-298c6c0c-846c-4144-a85f-fddd886df8eb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-298c6c0c-846c-4144-a85f-fddd886df8eb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["# We see there are some columns with null values.\n","# Before we start pre-processing, let's find out which of the columns have maximum null values\n","df.count().sort_values()"],"metadata":{"_cell_guid":"79c7e3d0-c299-4dcb-8224-4455121ee9b0","_uuid":"d629ff2d2480ee46fbb7e2d37f6b5fab8052498a","scrolled":true,"execution":{"iopub.status.busy":"2024-08-11T08:03:50.900833Z","iopub.execute_input":"2024-08-11T08:03:50.901191Z","iopub.status.idle":"2024-08-11T08:03:51.091259Z","shell.execute_reply.started":"2024-08-11T08:03:50.901131Z","shell.execute_reply":"2024-08-11T08:03:51.089715Z"},"trusted":true,"id":"QMGtrAWPhRbg","executionInfo":{"status":"ok","timestamp":1723364807806,"user_tz":-330,"elapsed":8,"user":{"displayName":"Mudavath Vishnu ae21b044","userId":"03764446376605897718"}},"outputId":"92eaaef3-f5f4-4866-9204-7d0c6dee84aa","colab":{"base_uri":"https://localhost:8080/","height":805}},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Sunshine          75625\n","Evaporation       82670\n","Cloud3pm          86102\n","Cloud9am          89572\n","Pressure9am      130395\n","Pressure3pm      130432\n","WindDir9am       134894\n","WindGustDir      135134\n","WindGustSpeed    135197\n","Humidity3pm      140953\n","WindDir3pm       141232\n","Temp3pm          141851\n","RainTomorrow     142193\n","RainToday        142199\n","Rainfall         142199\n","WindSpeed3pm     142398\n","Humidity9am      142806\n","Temp9am          143693\n","WindSpeed9am     143693\n","MinTemp          143975\n","MaxTemp          144199\n","Location         145460\n","Date             145460\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Sunshine</th>\n","      <td>75625</td>\n","    </tr>\n","    <tr>\n","      <th>Evaporation</th>\n","      <td>82670</td>\n","    </tr>\n","    <tr>\n","      <th>Cloud3pm</th>\n","      <td>86102</td>\n","    </tr>\n","    <tr>\n","      <th>Cloud9am</th>\n","      <td>89572</td>\n","    </tr>\n","    <tr>\n","      <th>Pressure9am</th>\n","      <td>130395</td>\n","    </tr>\n","    <tr>\n","      <th>Pressure3pm</th>\n","      <td>130432</td>\n","    </tr>\n","    <tr>\n","      <th>WindDir9am</th>\n","      <td>134894</td>\n","    </tr>\n","    <tr>\n","      <th>WindGustDir</th>\n","      <td>135134</td>\n","    </tr>\n","    <tr>\n","      <th>WindGustSpeed</th>\n","      <td>135197</td>\n","    </tr>\n","    <tr>\n","      <th>Humidity3pm</th>\n","      <td>140953</td>\n","    </tr>\n","    <tr>\n","      <th>WindDir3pm</th>\n","      <td>141232</td>\n","    </tr>\n","    <tr>\n","      <th>Temp3pm</th>\n","      <td>141851</td>\n","    </tr>\n","    <tr>\n","      <th>RainTomorrow</th>\n","      <td>142193</td>\n","    </tr>\n","    <tr>\n","      <th>RainToday</th>\n","      <td>142199</td>\n","    </tr>\n","    <tr>\n","      <th>Rainfall</th>\n","      <td>142199</td>\n","    </tr>\n","    <tr>\n","      <th>WindSpeed3pm</th>\n","      <td>142398</td>\n","    </tr>\n","    <tr>\n","      <th>Humidity9am</th>\n","      <td>142806</td>\n","    </tr>\n","    <tr>\n","      <th>Temp9am</th>\n","      <td>143693</td>\n","    </tr>\n","    <tr>\n","      <th>WindSpeed9am</th>\n","      <td>143693</td>\n","    </tr>\n","    <tr>\n","      <th>MinTemp</th>\n","      <td>143975</td>\n","    </tr>\n","    <tr>\n","      <th>MaxTemp</th>\n","      <td>144199</td>\n","    </tr>\n","    <tr>\n","      <th>Location</th>\n","      <td>145460</td>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <td>145460</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["# As we can see the first four columns have less than 60% data, we can ignore these four columns\n","# We don't need the location column because\n","# we are going to find if it will rain in Australia(not location specific)\n","# We are going to drop the date column too.\n","# We need to remove RISK_MM because we want to predict 'RainTomorrow' and RISK_MM can leak some info to our model\n","df = df.drop(columns=['Sunshine','Evaporation','Cloud3pm','Cloud9am','Location','Date'],axis=1)\n","df.shape"],"metadata":{"_uuid":"7f52607236f6f0dd243c4d2f0b8d87bc49125cfe","execution":{"iopub.status.busy":"2024-08-11T08:12:49.220182Z","iopub.execute_input":"2024-08-11T08:12:49.220594Z","iopub.status.idle":"2024-08-11T08:12:49.24739Z","shell.execute_reply.started":"2024-08-11T08:12:49.220521Z","shell.execute_reply":"2024-08-11T08:12:49.246276Z"},"trusted":true,"id":"kJzMhvtJhRbh","executionInfo":{"status":"ok","timestamp":1723364807806,"user_tz":-330,"elapsed":6,"user":{"displayName":"Mudavath Vishnu ae21b044","userId":"03764446376605897718"}},"outputId":"98618de9-dbd7-412a-9413-73c66f3c18c6","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(145460, 17)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["#Let us get rid of all null values in df\n","df = df.dropna(how='any')\n","df.shape"],"metadata":{"_uuid":"7036fdcaa560b9a551dc75108b2d5e57c77f2273","scrolled":true,"execution":{"iopub.status.busy":"2024-08-11T08:13:05.575756Z","iopub.execute_input":"2024-08-11T08:13:05.576111Z","iopub.status.idle":"2024-08-11T08:13:05.733716Z","shell.execute_reply.started":"2024-08-11T08:13:05.576057Z","shell.execute_reply":"2024-08-11T08:13:05.732786Z"},"trusted":true,"id":"-HMtwCXFhRbi","executionInfo":{"status":"ok","timestamp":1723364808466,"user_tz":-330,"elapsed":4,"user":{"displayName":"Mudavath Vishnu ae21b044","userId":"03764446376605897718"}},"outputId":"9d93bcfc-fd7c-48ff-a3ee-e3c64373286d","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(112925, 17)"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["#its time to remove the outliers in our data - we are using Z-score to detect and remove the outliers.\n","from scipy import stats\n","z = np.abs(stats.zscore(df._get_numeric_data()))\n","print(z)\n","df= df[(z < 3).all(axis=1)]\n","print(df.shape)"],"metadata":{"_uuid":"1f08d316d68e109aeeed8298dcf7cf1b31ec52c3","execution":{"iopub.status.busy":"2024-08-11T08:13:55.223494Z","iopub.execute_input":"2024-08-11T08:13:55.223856Z","iopub.status.idle":"2024-08-11T08:13:55.807825Z","shell.execute_reply.started":"2024-08-11T08:13:55.223802Z","shell.execute_reply":"2024-08-11T08:13:55.80644Z"},"trusted":true,"id":"90XHHlF0hRbi","executionInfo":{"status":"ok","timestamp":1723364810232,"user_tz":-330,"elapsed":1769,"user":{"displayName":"Mudavath Vishnu ae21b044","userId":"03764446376605897718"}},"outputId":"3f96ba44-1aec-4b74-8ee2-a32e0f1dce93","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["         MinTemp   MaxTemp  Rainfall  WindGustSpeed  WindSpeed9am  \\\n","0       0.117567  0.108221  0.206661       0.241214      0.577742   \n","1       0.841802  0.206845  0.276405       0.241214      1.339742   \n","2       0.037620  0.292772  0.276405       0.391345      0.457900   \n","3       0.553991  0.622159  0.276405       1.260094      0.500842   \n","4       0.773137  1.237969  0.160165       0.016018      0.980214   \n","...          ...       ...       ...            ...           ...   \n","145454  1.465392  0.265754  0.276405       0.734636      0.021471   \n","145455  1.577319  0.036615  0.276405       0.734636      0.261157   \n","145456  1.449403  0.235487  0.276405       1.410225      0.261157   \n","145457  1.161592  0.464626  0.276405       0.284243      0.740528   \n","145458  0.777844  0.478947  0.276405       0.959832      0.261157   \n","\n","        WindSpeed3pm  Humidity9am  Humidity3pm  Pressure9am  Pressure3pm  \\\n","0           0.524408     0.190140     1.380413     1.382962     1.142455   \n","1           0.291310     1.237561     1.235963     0.970598     1.041848   \n","2           0.757507     1.554828     0.995214     1.397181     0.912497   \n","3           1.223831     1.184683     1.669313     0.024764     0.323229   \n","4           0.058211     0.771796     0.850764     0.942159     1.300551   \n","...              ...          ...          ...          ...          ...   \n","145454      0.757634     0.444394     1.139664     1.034344     0.884050   \n","145455      0.990733     0.867416     1.284113     1.020125     0.754699   \n","145456      1.223831     0.603027     1.428563     0.863711     0.582231   \n","145457      1.223831     0.761660     1.284113     0.508225     0.251666   \n","145458      1.456930     0.867416     1.284113     0.280714     0.208549   \n","\n","         Temp9am   Temp3pm  \n","0       0.088435  0.047870  \n","1       0.041228  0.317768  \n","2       0.556724  0.156887  \n","3       0.100392  0.639531  \n","4       0.053185  1.107548  \n","...          ...       ...  \n","145454  1.268605  0.179500  \n","145455  1.158456  0.039883  \n","145456  1.032571  0.347020  \n","145457  0.780802  0.581028  \n","145458  0.371676  0.566403  \n","\n","[112925 rows x 12 columns]\n","(107868, 17)\n"]}]},{"cell_type":"code","source":["#Lets deal with the categorical cloumns now\n","# simply change yes/no to 1/0 for RainToday and RainTomorrow\n","df['RainToday'].replace({'No': 0, 'Yes': 1},inplace = True)\n","df['RainTomorrow'].replace({'No': 0, 'Yes': 1},inplace = True)\n","\n","#See unique values and convert them to int using pd.getDummies()\n","categorical_columns = ['WindGustDir', 'WindDir3pm', 'WindDir9am']\n","for col in categorical_columns:\n","    print(np.unique(df[col]))\n","# transform the categorical columns\n","df = pd.get_dummies(df, columns=categorical_columns)\n","df.iloc[4:9]"],"metadata":{"_uuid":"8e22c640e544bc53eef8e8b733f1b03b70e92bc7","execution":{"iopub.status.busy":"2024-08-11T08:14:20.910079Z","iopub.execute_input":"2024-08-11T08:14:20.910587Z","iopub.status.idle":"2024-08-11T08:14:21.916611Z","shell.execute_reply.started":"2024-08-11T08:14:20.910509Z","shell.execute_reply":"2024-08-11T08:14:21.915518Z"},"trusted":true,"id":"DkXlYJNIhRbi","executionInfo":{"status":"ok","timestamp":1723364811528,"user_tz":-330,"elapsed":1299,"user":{"displayName":"Mudavath Vishnu ae21b044","userId":"03764446376605897718"}},"outputId":"01773cdd-fe82-4616-eed3-95629f1d20be","colab":{"base_uri":"https://localhost:8080/","height":446}},"execution_count":7,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-6e3c9b9b5dbd>:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['RainToday'].replace({'No': 0, 'Yes': 1},inplace = True)\n"]},{"output_type":"stream","name":"stdout","text":["['E' 'ENE' 'ESE' 'N' 'NE' 'NNE' 'NNW' 'NW' 'S' 'SE' 'SSE' 'SSW' 'SW' 'W'\n"," 'WNW' 'WSW']\n","['E' 'ENE' 'ESE' 'N' 'NE' 'NNE' 'NNW' 'NW' 'S' 'SE' 'SSE' 'SSW' 'SW' 'W'\n"," 'WNW' 'WSW']\n","['E' 'ENE' 'ESE' 'N' 'NE' 'NNE' 'NNW' 'NW' 'S' 'SE' 'SSE' 'SSW' 'SW' 'W'\n"," 'WNW' 'WSW']\n"]},{"output_type":"execute_result","data":{"text/plain":["   MinTemp  MaxTemp  Rainfall  WindGustSpeed  WindSpeed9am  WindSpeed3pm  \\\n","4     17.5     32.3       1.0           41.0           7.0          20.0   \n","5     14.6     29.7       0.2           56.0          19.0          24.0   \n","6     14.3     25.0       0.0           50.0          20.0          24.0   \n","7      7.7     26.7       0.0           35.0           6.0          17.0   \n","8      9.7     31.9       0.0           80.0           7.0          28.0   \n","\n","   Humidity9am  Humidity3pm  Pressure9am  Pressure3pm  ...  WindDir9am_NNW  \\\n","4         82.0         33.0       1010.8       1006.0  ...           False   \n","5         55.0         23.0       1009.2       1005.4  ...           False   \n","6         49.0         19.0       1009.6       1008.2  ...           False   \n","7         48.0         19.0       1013.4       1010.1  ...           False   \n","8         42.0          9.0       1008.9       1003.6  ...           False   \n","\n","   WindDir9am_NW  WindDir9am_S  WindDir9am_SE  WindDir9am_SSE  WindDir9am_SSW  \\\n","4          False         False          False           False           False   \n","5          False         False          False           False           False   \n","6          False         False          False           False           False   \n","7          False         False          False            True           False   \n","8          False         False           True           False           False   \n","\n","   WindDir9am_SW  WindDir9am_W  WindDir9am_WNW  WindDir9am_WSW  \n","4          False         False           False           False  \n","5          False          True           False           False  \n","6           True         False           False           False  \n","7          False         False           False           False  \n","8          False         False           False           False  \n","\n","[5 rows x 62 columns]"],"text/html":["\n","  <div id=\"df-4471c5b7-c7f7-4417-b3cc-c42c23c56ca7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MinTemp</th>\n","      <th>MaxTemp</th>\n","      <th>Rainfall</th>\n","      <th>WindGustSpeed</th>\n","      <th>WindSpeed9am</th>\n","      <th>WindSpeed3pm</th>\n","      <th>Humidity9am</th>\n","      <th>Humidity3pm</th>\n","      <th>Pressure9am</th>\n","      <th>Pressure3pm</th>\n","      <th>...</th>\n","      <th>WindDir9am_NNW</th>\n","      <th>WindDir9am_NW</th>\n","      <th>WindDir9am_S</th>\n","      <th>WindDir9am_SE</th>\n","      <th>WindDir9am_SSE</th>\n","      <th>WindDir9am_SSW</th>\n","      <th>WindDir9am_SW</th>\n","      <th>WindDir9am_W</th>\n","      <th>WindDir9am_WNW</th>\n","      <th>WindDir9am_WSW</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>17.5</td>\n","      <td>32.3</td>\n","      <td>1.0</td>\n","      <td>41.0</td>\n","      <td>7.0</td>\n","      <td>20.0</td>\n","      <td>82.0</td>\n","      <td>33.0</td>\n","      <td>1010.8</td>\n","      <td>1006.0</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>14.6</td>\n","      <td>29.7</td>\n","      <td>0.2</td>\n","      <td>56.0</td>\n","      <td>19.0</td>\n","      <td>24.0</td>\n","      <td>55.0</td>\n","      <td>23.0</td>\n","      <td>1009.2</td>\n","      <td>1005.4</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>14.3</td>\n","      <td>25.0</td>\n","      <td>0.0</td>\n","      <td>50.0</td>\n","      <td>20.0</td>\n","      <td>24.0</td>\n","      <td>49.0</td>\n","      <td>19.0</td>\n","      <td>1009.6</td>\n","      <td>1008.2</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7.7</td>\n","      <td>26.7</td>\n","      <td>0.0</td>\n","      <td>35.0</td>\n","      <td>6.0</td>\n","      <td>17.0</td>\n","      <td>48.0</td>\n","      <td>19.0</td>\n","      <td>1013.4</td>\n","      <td>1010.1</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9.7</td>\n","      <td>31.9</td>\n","      <td>0.0</td>\n","      <td>80.0</td>\n","      <td>7.0</td>\n","      <td>28.0</td>\n","      <td>42.0</td>\n","      <td>9.0</td>\n","      <td>1008.9</td>\n","      <td>1003.6</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 62 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4471c5b7-c7f7-4417-b3cc-c42c23c56ca7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4471c5b7-c7f7-4417-b3cc-c42c23c56ca7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4471c5b7-c7f7-4417-b3cc-c42c23c56ca7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eac6a3c8-a68c-40fa-894f-be56fdb3a88d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eac6a3c8-a68c-40fa-894f-be56fdb3a88d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eac6a3c8-a68c-40fa-894f-be56fdb3a88d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["#next step is to standardize our data - using MinMaxScaler\n","from sklearn import preprocessing\n","scaler = preprocessing.MinMaxScaler()\n","scaler.fit(df)\n","df = pd.DataFrame(scaler.transform(df), index=df.index, columns=df.columns)\n","df.iloc[4:10]"],"metadata":{"_uuid":"6c2656d58ffacc4b757fea3ec3c489c47eb5ca76","execution":{"iopub.status.busy":"2024-08-11T08:14:35.638854Z","iopub.execute_input":"2024-08-11T08:14:35.639285Z","iopub.status.idle":"2024-08-11T08:14:36.225758Z","shell.execute_reply.started":"2024-08-11T08:14:35.63921Z","shell.execute_reply":"2024-08-11T08:14:36.224785Z"},"trusted":true,"id":"DmX6GevphRbj","executionInfo":{"status":"ok","timestamp":1723364812808,"user_tz":-330,"elapsed":1285,"user":{"displayName":"Mudavath Vishnu ae21b044","userId":"03764446376605897718"}},"outputId":"c18646ce-7e29-4651-fbfd-987749b608fd","colab":{"base_uri":"https://localhost:8080/","height":287}},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    MinTemp   MaxTemp  Rainfall  WindGustSpeed  WindSpeed9am  WindSpeed3pm  \\\n","4  0.628342  0.696296  0.035714       0.465753      0.135135      0.428571   \n","5  0.550802  0.632099  0.007143       0.671233      0.459459      0.523810   \n","6  0.542781  0.516049  0.000000       0.589041      0.486486      0.523810   \n","7  0.366310  0.558025  0.000000       0.383562      0.108108      0.357143   \n","8  0.419786  0.686420  0.000000       1.000000      0.135135      0.619048   \n","9  0.510695  0.641975  0.050000       0.287671      0.351351      0.214286   \n","\n","   Humidity9am  Humidity3pm  Pressure9am  Pressure3pm  ...  WindDir9am_NNW  \\\n","4     0.797753         0.33     0.342043     0.282974  ...             0.0   \n","5     0.494382         0.23     0.304038     0.268585  ...             0.0   \n","6     0.426966         0.19     0.313539     0.335731  ...             0.0   \n","7     0.415730         0.19     0.403800     0.381295  ...             0.0   \n","8     0.348315         0.09     0.296912     0.225420  ...             0.0   \n","9     0.528090         0.27     0.251781     0.275779  ...             0.0   \n","\n","   WindDir9am_NW  WindDir9am_S  WindDir9am_SE  WindDir9am_SSE  WindDir9am_SSW  \\\n","4            0.0           0.0            0.0             0.0             0.0   \n","5            0.0           0.0            0.0             0.0             0.0   \n","6            0.0           0.0            0.0             0.0             0.0   \n","7            0.0           0.0            0.0             1.0             0.0   \n","8            0.0           0.0            1.0             0.0             0.0   \n","9            0.0           1.0            0.0             0.0             0.0   \n","\n","   WindDir9am_SW  WindDir9am_W  WindDir9am_WNW  WindDir9am_WSW  \n","4            0.0           0.0             0.0             0.0  \n","5            0.0           1.0             0.0             0.0  \n","6            1.0           0.0             0.0             0.0  \n","7            0.0           0.0             0.0             0.0  \n","8            0.0           0.0             0.0             0.0  \n","9            0.0           0.0             0.0             0.0  \n","\n","[6 rows x 62 columns]"],"text/html":["\n","  <div id=\"df-5cf802a2-46ec-422f-8a1a-5054fc27519a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MinTemp</th>\n","      <th>MaxTemp</th>\n","      <th>Rainfall</th>\n","      <th>WindGustSpeed</th>\n","      <th>WindSpeed9am</th>\n","      <th>WindSpeed3pm</th>\n","      <th>Humidity9am</th>\n","      <th>Humidity3pm</th>\n","      <th>Pressure9am</th>\n","      <th>Pressure3pm</th>\n","      <th>...</th>\n","      <th>WindDir9am_NNW</th>\n","      <th>WindDir9am_NW</th>\n","      <th>WindDir9am_S</th>\n","      <th>WindDir9am_SE</th>\n","      <th>WindDir9am_SSE</th>\n","      <th>WindDir9am_SSW</th>\n","      <th>WindDir9am_SW</th>\n","      <th>WindDir9am_W</th>\n","      <th>WindDir9am_WNW</th>\n","      <th>WindDir9am_WSW</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>0.628342</td>\n","      <td>0.696296</td>\n","      <td>0.035714</td>\n","      <td>0.465753</td>\n","      <td>0.135135</td>\n","      <td>0.428571</td>\n","      <td>0.797753</td>\n","      <td>0.33</td>\n","      <td>0.342043</td>\n","      <td>0.282974</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.550802</td>\n","      <td>0.632099</td>\n","      <td>0.007143</td>\n","      <td>0.671233</td>\n","      <td>0.459459</td>\n","      <td>0.523810</td>\n","      <td>0.494382</td>\n","      <td>0.23</td>\n","      <td>0.304038</td>\n","      <td>0.268585</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.542781</td>\n","      <td>0.516049</td>\n","      <td>0.000000</td>\n","      <td>0.589041</td>\n","      <td>0.486486</td>\n","      <td>0.523810</td>\n","      <td>0.426966</td>\n","      <td>0.19</td>\n","      <td>0.313539</td>\n","      <td>0.335731</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.366310</td>\n","      <td>0.558025</td>\n","      <td>0.000000</td>\n","      <td>0.383562</td>\n","      <td>0.108108</td>\n","      <td>0.357143</td>\n","      <td>0.415730</td>\n","      <td>0.19</td>\n","      <td>0.403800</td>\n","      <td>0.381295</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.419786</td>\n","      <td>0.686420</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.135135</td>\n","      <td>0.619048</td>\n","      <td>0.348315</td>\n","      <td>0.09</td>\n","      <td>0.296912</td>\n","      <td>0.225420</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.510695</td>\n","      <td>0.641975</td>\n","      <td>0.050000</td>\n","      <td>0.287671</td>\n","      <td>0.351351</td>\n","      <td>0.214286</td>\n","      <td>0.528090</td>\n","      <td>0.27</td>\n","      <td>0.251781</td>\n","      <td>0.275779</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6 rows × 62 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5cf802a2-46ec-422f-8a1a-5054fc27519a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5cf802a2-46ec-422f-8a1a-5054fc27519a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5cf802a2-46ec-422f-8a1a-5054fc27519a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-142cc56c-3885-412f-9964-e125588f804e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-142cc56c-3885-412f-9964-e125588f804e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-142cc56c-3885-412f-9964-e125588f804e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["**Feature Selection**"],"metadata":{"_uuid":"2d005712b4e5f66521a9def03efb95d295efa735","id":"Tvfya22rhRbj"}},{"cell_type":"code","source":["#now that we are done with the pre-processing part, let's see which are the important features for RainTomorrow!\n","#Using SelectKBest to get the top features!\n","from sklearn.feature_selection import SelectKBest, chi2\n","X = df.loc[:,df.columns!='RainTomorrow']\n","y = df[['RainTomorrow']]\n","selector = SelectKBest(chi2, k=3)\n","selector.fit(X, y)\n","X_new = selector.transform(X)\n","print(X.columns[selector.get_support(indices=True)]) #top 3 columns"],"metadata":{"_uuid":"5d997dd8dfeb8e5b365660bd4de0418bc960870d","scrolled":true,"execution":{"iopub.status.busy":"2024-08-11T08:14:44.670406Z","iopub.execute_input":"2024-08-11T08:14:44.670762Z","iopub.status.idle":"2024-08-11T08:14:44.926846Z","shell.execute_reply.started":"2024-08-11T08:14:44.670708Z","shell.execute_reply":"2024-08-11T08:14:44.92542Z"},"trusted":true,"id":"FgtC_dA4hRbj","executionInfo":{"status":"ok","timestamp":1723364813950,"user_tz":-330,"elapsed":1147,"user":{"displayName":"Mudavath Vishnu ae21b044","userId":"03764446376605897718"}},"outputId":"7d698be5-d9fe-4041-ab79-6aba189390aa","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Rainfall', 'Humidity3pm', 'RainToday'], dtype='object')\n"]}]},{"cell_type":"code","source":["#Let's get hold of the important features as assign them as X\n","df = df[['Humidity3pm','Rainfall','RainToday','RainTomorrow']]\n","X = df[['Humidity3pm']] # let's use only one feature Humidity3pm\n","y = df[['RainTomorrow']]"],"metadata":{"_uuid":"9c63d906affa6ab162f67f5c52885da35f0cc8ce","execution":{"iopub.status.busy":"2024-08-11T08:15:19.337207Z","iopub.execute_input":"2024-08-11T08:15:19.337575Z","iopub.status.idle":"2024-08-11T08:15:19.350771Z","shell.execute_reply.started":"2024-08-11T08:15:19.337519Z","shell.execute_reply":"2024-08-11T08:15:19.349664Z"},"trusted":true,"id":"xaAoXND8hRbj","executionInfo":{"status":"ok","timestamp":1723364814401,"user_tz":-330,"elapsed":453,"user":{"displayName":"Mudavath Vishnu ae21b044","userId":"03764446376605897718"}}},"execution_count":10,"outputs":[]},{"cell_type":"markdown","source":["**Finding the best model**"],"metadata":{"_uuid":"3d9180dc2e0e64fa80f96b13867f4312e71dccc7","id":"NTb3i6nthRbk"}},{"cell_type":"code","source":["#Logistic Regression\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score\n","import time\n","\n","t0=time.time()\n","X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25)\n","clf_logreg = LogisticRegression(random_state=0)\n","clf_logreg.fit(X_train,y_train)\n","y_pred = clf_logreg.predict(X_test)\n","score = accuracy_score(y_test,y_pred)\n","print('Accuracy :',score)\n","print('Time taken :' , time.time()-t0)\n"],"metadata":{"_uuid":"c3c56453b4ded8e113c8ca788f1270451d8f697a","execution":{"iopub.status.busy":"2024-08-11T08:15:29.478311Z","iopub.execute_input":"2024-08-11T08:15:29.478729Z","iopub.status.idle":"2024-08-11T08:15:29.743821Z","shell.execute_reply.started":"2024-08-11T08:15:29.478656Z","shell.execute_reply":"2024-08-11T08:15:29.736174Z"},"trusted":true,"id":"yusfxDLUhRbk","executionInfo":{"status":"ok","timestamp":1723364814402,"user_tz":-330,"elapsed":4,"user":{"displayName":"Mudavath Vishnu ae21b044","userId":"03764446376605897718"}},"outputId":"14751ad5-f856-4fdb-9ea0-e678b65f9bc4","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":11,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/utils/validation.py:1183: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"]},{"output_type":"stream","name":"stdout","text":["Accuracy : 0.8363184633070049\n","Time taken : 0.36985230445861816\n"]}]},{"cell_type":"code","source":["#Random Forest Classifier\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import train_test_split\n","\n","t0=time.time()\n","X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25)\n","clf_rf = RandomForestClassifier(n_estimators=100, max_depth=4,random_state=0)\n","clf_rf.fit(X_train,y_train)\n","y_pred = clf_rf.predict(X_test)\n","score = accuracy_score(y_test,y_pred)\n","print('Accuracy :',score)\n","print('Time taken :' , time.time()-t0)"],"metadata":{"scrolled":true,"_uuid":"3f3f7042c83187b41dd0e1fd67dcb881ed3b6a17","execution":{"iopub.status.busy":"2024-08-11T08:15:41.035876Z","iopub.execute_input":"2024-08-11T08:15:41.036317Z","iopub.status.idle":"2024-08-11T08:15:44.262715Z","shell.execute_reply.started":"2024-08-11T08:15:41.036243Z","shell.execute_reply":"2024-08-11T08:15:44.261426Z"},"trusted":true,"id":"rqKqD6CqhRbk","executionInfo":{"status":"ok","timestamp":1723364823669,"user_tz":-330,"elapsed":9270,"user":{"displayName":"Mudavath Vishnu ae21b044","userId":"03764446376605897718"}},"outputId":"8e81cc96-bdb4-4620-bcea-513e35657f75","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":12,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:1152: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n","  return fit_method(estimator, *args, **kwargs)\n"]},{"output_type":"stream","name":"stdout","text":["Accuracy : 0.8372084399451181\n","Time taken : 8.990469932556152\n"]}]},{"cell_type":"code","source":["#Decision Tree Classifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.model_selection import train_test_split\n","\n","t0=time.time()\n","X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25)\n","clf_dt = DecisionTreeClassifier(random_state=0)\n","clf_dt.fit(X_train,y_train)\n","y_pred = clf_dt.predict(X_test)\n","score = accuracy_score(y_test,y_pred)\n","print('Accuracy :',score)\n","print('Time taken :' , time.time()-t0)"],"metadata":{"_uuid":"e5e3a66bddcfa113062819463fbde37f7c527fea","execution":{"iopub.status.busy":"2024-08-11T08:15:53.583072Z","iopub.execute_input":"2024-08-11T08:15:53.583469Z","iopub.status.idle":"2024-08-11T08:15:53.652854Z","shell.execute_reply.started":"2024-08-11T08:15:53.583395Z","shell.execute_reply":"2024-08-11T08:15:53.651669Z"},"trusted":true,"id":"CXbSALewhRbk","executionInfo":{"status":"ok","timestamp":1723364824318,"user_tz":-330,"elapsed":651,"user":{"displayName":"Mudavath Vishnu ae21b044","userId":"03764446376605897718"}},"outputId":"ef4f4df2-afe5-47d4-c3d1-31e9892864c6","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy : 0.8366892869062187\n","Time taken : 0.19514966011047363\n"]}]},{"cell_type":"code","source":["#Support Vector Machine\n","from sklearn import svm\n","from sklearn.model_selection import train_test_split\n","\n","t0=time.time()\n","X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25)\n","clf_svc = svm.SVC(kernel='linear')\n","clf_svc.fit(X_train,y_train)\n","y_pred = clf_svc.predict(X_test)\n","score = accuracy_score(y_test,y_pred)\n","print('Accuracy :',score)\n","print('Time taken :' , time.time()-t0)"],"metadata":{"_uuid":"e9f2db3c3bcbe9c290f075c60948d34805201694","execution":{"iopub.status.busy":"2024-08-11T08:16:12.992952Z","iopub.execute_input":"2024-08-11T08:16:12.993378Z","iopub.status.idle":"2024-08-11T08:17:07.950192Z","shell.execute_reply.started":"2024-08-11T08:16:12.993304Z","shell.execute_reply":"2024-08-11T08:17:07.948921Z"},"trusted":true,"id":"CNneR15ThRbk","outputId":"5cfbb6e6-4199-4cbd-d1d9-e6a9c33bc926","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/utils/validation.py:1183: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"]}]},{"cell_type":"markdown","source":["All models give an accuracy score of ~ 83-84 % except for SVM.\n","Considering the computation time,  DecisionTreeClassifier is best."],"metadata":{"_uuid":"43664255cd95f353d5183090d17ad9bfd8bc7ffb","id":"rgbki8WfhRbk"}}]}